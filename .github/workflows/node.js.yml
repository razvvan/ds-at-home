# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    tags:
    - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: 15.x

    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install packages
      run: yarn install

    - id: dist-builder
      run: |
        version=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')
        echo "ok: $version"
        EXTRAMETADATA="-c.extraMetadata.version=$version" yarn run dist-rpi
        EXTRAMETADATA="-c.extraMetadata.version=$version" yarn run dist-osx
        echo "::set-output name=V_TAG::$version"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (rpi)
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ds-at-home_${{ steps.dist-builder.outputs.V_TAG }}_arm64.deb
        asset_name: ds-at-home_${{ steps.dist-builder.outputs.V_TAG }}_arm64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Release Asset (osx)
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ds-at-home-${{ steps.dist-builder.outputs.V_TAG }}.dmg
        asset_name: ds-at-home-${{ steps.dist-builder.outputs.V_TAG }}.dmg
        asset_content_type: application/vnd.debian.binary-package
